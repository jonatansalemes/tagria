<?xml version="1.0" encoding="UTF-8" ?>
<taglib xmlns="http://java.sun.com/xml/ns/j2ee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee 
http://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd"
	version="2.0">

	<description>Tagria html library</description>
	<display-name>Tagria html library</display-name>
	<tlib-version>4.0</tlib-version>
	<short-name>html</short-name>
	<uri>http://tagria.jslsolucoes.com/tags/html</uri>

	
	
	

	

	<tag>
		<description>Renders a jumbotron</description>
		<display-name>Misc</display-name>
		<name>jumbotron</name>
		<tag-class>com.jslsolucoes.tagria.tag.html.tag.JumbotronTag</tag-class>
		<body-content>scriptless</body-content>
		<example>
			&lt;html:jumbotron&gt; &lt;html:h1&gt; Header &lt;/html:h1&gt; &lt;/html:jumbotron&gt; </example>
	</tag>

	<tag>
		<description>Renders a mask in currency format for a particular input</description>
		<display-name>Mask</display-name>
		<name>currencyMask</name>
		<tag-class>com.jslsolucoes.tagria.tag.html.tag.CurrencyMaskTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the component name to attach currency mask</description>
			<name>attachTo</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the component selector to attach currency mask</description>
			<name>attachToSelector</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:input name="teste" value="0" format="currency"/&gt;
			&lt;html:currencyMask attachTo="teste"/&gt; </example>
	</tag>

	<tag>
		<description>Renders event on mask after any key press</description>
		<display-name>Mask</display-name>
		<name>maskOnKeyPress</name>
		<tag-class>com.jslsolucoes.tagria.tag.html.tag.MaskOnKeyPressTag</tag-class>
		<body-content>scriptless</body-content>
		<example>
			&lt;html:input name="teste"/&gt;
			&lt;html:mask mask="(00) 0000-00000" attachTo="teste"&gt;
				&lt;html:maskOnKeyPress&gt;
				    var masks = ['(00) 0000-00000', '(00) 00000-0000'];
					mask = (value.length > 14) ? masks[1] : masks[0];
					$('#'+$(field[0]).attr('id')).mask(mask,options);
				&lt;/html:maskOnKeyPress&gt;
			&lt;/html:mask&gt; </example>
	</tag>

	<tag>
		<description>Renders a h1</description>
		<display-name>Html</display-name>
		<name>h1</name>
		<tag-class>com.jslsolucoes.tagria.tag.html.tag.H1Tag</tag-class>
		<body-content>scriptless</body-content>
		<example>
			&lt;html:h1&gt; Cabecalho &lt;/html:h1&gt; </example>
	</tag>

	

	<tag>
		<description>Renders a h3</description>
		<display-name>Html</display-name>
		<name>h3</name>
		<tag-class>com.jslsolucoes.tagria.tag.html.tag.H3Tag</tag-class>
		<body-content>scriptless</body-content>
		<example>
			&lt;html:h3&gt; Cabecalho &lt;/html:h3&gt; </example>
	</tag>

	<tag>
		<description>Renders a block with top and bottom spacing</description>
		<display-name>Misc</display-name>
		<name>block</name>
		<tag-class>com.jslsolucoes.tagria.tag.html.tag.BlockTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates whether the component should be rendered . Default : true</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>Indicates the align of text inside block. Default: left . Options: left,center,right </description>
			<name>align</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates size of margin top and left . Default : 3. Options: 1-5</description>
			<name>margin</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Integer</type>
		</attribute>
		<example>
			&lt;html:block margin="3"&gt;
				Meu bloco de componentes
			&lt;/html:block&gt; </example>
	</tag>

	


	

	<tag>
		<description>Renders a data block iteration</description>
		<display-name>Layout</display-name>
		<name>dataBlock</name>
		<tag-class>com.jslsolucoes.tagria.tag.html.tag.DataBlockTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates the collection to be iterated by the component</description>
			<name>data</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.util.Collection</type>
		</attribute>
		<attribute>
			<description>It indicates the name of the variable java to be made available the object of iteration</description>
			<name>var</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the number of columns to fill to extra small viewport. Options: 1 to 12</description>
			<name>extraSmall</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description>Indicates the number of columns to fill to small viewport. Options: 1 to 12</description>
			<name>small</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description>Indicates the number of columns to fill to medium viewport. Options: 1 to 12</description>
			<name>medium</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description>Indicates the number of columns to fill to large viewport. Options: 1 to 12</description>
			<name>large</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Integer</type>
		</attribute>
		<example>
			&lt;html:dataBlock limit="12" extraSmall="12" medium="4" small="4" large="1" data="${ persons }" var="person"&gt;
				&lt;html:alert state="success"&gt;
					${ person.name }
				&lt;/html:alert&gt;
			&lt;/html:dataBlock&gt; </example>
	</tag>

	

	




	


	<tag>
		<description>Renders a component with collapsable effect</description>
		<display-name>Misc</display-name>
		<name>collapsable</name>
		<tag-class>com.jslsolucoes.tagria.tag.html.tag.CollapsableTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates the label to be used in collapsable</description>
			<name>label</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates if component must be opened. Default : false. Options : true,false</description>
			<name>opened</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>Indicates the status of the group. Default: primary. Options: default, primary, danger, info, success</description>
			<name>state</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:collapsable label="Label 1"&gt;
				Components
			&lt;/html:collapsable&gt; </example>
	</tag>

	

	<tag>
		<description>Renders a dialog modal confirmation</description>
		<display-name>Misc</display-name>
		<name>confirmDialog</name>
		<tag-class>com.jslsolucoes.tagria.tag.html.tag.ConfirmDialogTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates the label of the title modal</description>
			<name>label</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the URL to confirm the operation</description>
			<name>url</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the component target. Default: _self. Options: _blank, _newtab, nomedoiframe</description>
			<name>target</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the component name that triggers the confirm screen</description>
			<name>attachTo</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the component selector that triggers the confirm screen</description>
			<name>attachToSelector</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
		    &lt;html:button id="botao" label="Confirmar algo"/&gt;
			&lt;html:confirm url="#" label="Titulo do modal" attachToSelector="#botao"&gt;
								
			&lt;/html:confirm&gt; </example>
	</tag>

	<tag>
		<description>Renders a h2</description>
		<display-name>Html</display-name>
		<name>h2</name>
		<tag-class>com.jslsolucoes.tagria.tag.html.tag.H2Tag</tag-class>
		<body-content>scriptless</body-content>
		<example>
			&lt;html:h2&gt; Header &lt;/html:h2&gt; </example>
	</tag>

	<tag>
		<description>Renders a horizontal line</description>
		<display-name>Html</display-name>
		<name>hr</name>
		<tag-class>com.jslsolucoes.tagria.tag.html.tag.HrTag</tag-class>
		<body-content>scriptless</body-content>
		<example>
			&lt;html:hr/&gt; </example>
	</tag>

	<tag>
		<description>Renders a small</description>
		<display-name>Html</display-name>
		<name>small</name>
		<tag-class>com.jslsolucoes.tagria.tag.html.tag.SmallTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates a CSS class to the component</description>
			<name>cssClass</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:small&gt; small text &lt;/html:small&gt; </example>
	</tag>

	<tag>
		<description>Format values</description>
		<display-name>Misc</display-name>
		<name>format</name>
		<tag-class>com.jslsolucoes.tagria.tag.html.tag.FormatTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates a type format in which the value must be converted. Options: date,datetime, timestamp, hour, currency, zipCode, cnpj, tel, cpf</description>
			<name>type</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates a match regular expression value</description>
			<name>match</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates a replace regular expression value</description>
			<name>replace</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:format type="currency"&gt; ${ myValue} &lt;/html:format&gt; </example>
	</tag>

	<tag>
		<description>Renders a paragraf</description>
		<display-name>Html</display-name>
		<name>p</name>
		<tag-class>com.jslsolucoes.tagria.tag.html.tag.PTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates whether the component should be rendered. Default : true</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<example>
			&lt;html:p&gt; Content &lt;/html:p&gt; </example>
	</tag>

	<tag>
		<description>Renders a source block of a particular language without executing it</description>
		<display-name>Misc</display-name>
		<name>code</name>
		<tag-class>com.jslsolucoes.tagria.tag.html.tag.CodeTag</tag-class>
		<body-content>scriptless</body-content>
		<example>
			&lt;html:code&gt;
				private class Java {
					private String id;
					private String name;
				}
			&lt;/html:code&gt; </example>

	</tag>

	<tag>
		<description>Renders a main container block with a standard margin</description>
		<display-name>Layout</display-name>
		<name>container</name>
		<tag-class>com.jslsolucoes.tagria.tag.html.tag.ContainerTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates whether a container must be responsive to the screen 100%</description>
			<name>fluid</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<example>
			
			&lt;html:alert state="info"&gt;
				Componente fora do container
			&lt;/html:alert&gt;
			
			&lt;html:container&gt;
				&lt;html:alert state="info"&gt;
					Componente dentro do container
				&lt;/html:alert&gt;
			&lt;/html:container&gt; </example>
	</tag>

	<tag>
		<description>Renders an alert box</description>
		<display-name>Misc</display-name>
		<name>alert</name>
		<tag-class>com.jslsolucoes.tagria.tag.html.tag.AlertTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the id for the component</description>
			<name>id</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates a css class to the component</description>
			<name>cssClass</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates a label for the alert.</description>
			<name>label</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component can be closed. Default: false</description>
			<name>dismissible</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates the state where the box should be rendered. Default: warning. Options: primary, secondary, light, dark, warning, success, danger, info</description>
			<name>state</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be rendered. Default : true</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be visible. Default : true</description>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<example>
			&lt;html:alert state="info"&gt;
				info
			&lt;/html:alert&gt; </example>
	</tag>



	

	<tag>
		<description>Renders a line of columns of subdivision (divided into 12 sections combined with the col tag)</description>
		<display-name>Form</display-name>
		<name>row</name>
		<tag-class>com.jslsolucoes.tagria.tag.html.tag.RowTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates a CSS class to the component</description>
			<name>cssClass</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:form action="#"&gt;
				&lt;html:formGroup forElement="field1" label="Campo 1" required="true"&gt;
					&lt;html:row&gt;
						&lt;html:col extraSmall="6"&gt;
							&lt;html:input required="true" name="field1"/&gt;
						&lt;/html:col&gt;
						&lt;html:col extraSmall="6"&gt;
							&lt;html:input name="field2"/&gt;
						&lt;/html:col&gt;
					&lt;/html:row>
				&lt;/html:formGroup&gt;
			&lt;/html:form&gt; </example>
	</tag>

	<tag>
		<description>Renders a column within a row</description>
		<display-name>Form</display-name>
		<name>col</name>
		<tag-class>com.jslsolucoes.tagria.tag.html.tag.ColTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the number of columns to fill to extra small viewport. Options: 1 to 12</description>
			<name>extraSmall</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description>Indicates the number of columns to fill to small viewport. Options: 1 to 12</description>
			<name>small</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description>Indicates the number of columns to fill to medium viewport. Options: 1 to 12</description>
			<name>medium</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description>Indicates the number of columns to fill to large viewport. Options: 1 to 12</description>
			<name>large</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description>It indicates a CSS class to the component</description>
			<name>cssClass</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:form action="#"&gt;
				&lt;html:formGroup forElement="field1" label="Campo 1" required="true"&gt;
					&lt;html:row&gt;
						&lt;html:col extraSmall="3"&gt;
							&lt;html:input required="true" name="field1"/&gt;
						&lt;/html:col&gt;
						&lt;html:col extraSmall="9"&gt;
							&lt;html:input name="field2"/&gt;
						&lt;/html:col&gt;
					&lt;/html:row>
				&lt;/html:formGroup&gt;
			&lt;/html:form&gt; </example>
	</tag>

	

	<tag>
		<description>Renders a div</description>
		<display-name>Layout</display-name>
		<name>div</name>
		<tag-class>com.jslsolucoes.tagria.tag.html.tag.DivTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the component&#39;s id</description>
			<name>id</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates a CSS class to the component</description>
			<name>cssClass</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be rendered. Default : true.</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<example>
			&lt;html:div&gt;
				Conteudo
			&lt;/html:div&gt; </example>
	</tag>

	<tag>
		<description>Renders importing a js file or css</description>
		<display-name>Misc</display-name>
		<name>import</name>
		<tag-class>com.jslsolucoes.tagria.tag.html.tag.ImportTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the type of file to be imported. Options: js, css</description>
			<name>type</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the URL where the file</description>
			<name>url</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:import type="css" url="/css/example.css"/&gt;
			&lt;html:import type="js" url="/js/example.js"/&gt; </example>
	</tag>

	



	<tag>
		<description>Renders a link</description>
		<display-name>Html</display-name>
		<name>link</name>
		<tag-class>com.jslsolucoes.tagria.tag.html.tag.LinkTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the url component</description>
			<name>url</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the label component</description>
			<name>label</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be rendered</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>Indicates the component target. Default: _self. Options: _blank, _newtab, nomedoiframe</description>
			<name>target</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:link label="Meu link" url="#"/&gt; </example>
	</tag>

	<tag>
		<description>Renders an iframe</description>
		<display-name>Misc</display-name>
		<name>iframe</name>
		<tag-class>com.jslsolucoes.tagria.tag.html.tag.IframeTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the name of the iframe</description>
			<name>name</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates a CSS class to the component</description>
			<name>cssClass</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the id of the iframe</description>
			<name>id</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the URL where the iframe</description>
			<name>url</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:iframe url="/app/welcome" name="conteudo"/&gt; </example>
	</tag>

	

	<tag>
		<description>Renders a grid</description>
		<display-name>Grid</display-name>
		<name>grid</name>
		<tag-class>com.jslsolucoes.tagria.tag.html.tag.GridTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates the collection to be iterated by the component</description>
			<name>data</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.util.Collection</type>
		</attribute>
		<attribute>
			<description>It indicates the name of the variable java to be made available the object of iteration</description>
			<name>var</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates the name of the variable to be available to current iteration</description>
			<name>varStatus</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the label component</description>
			<name>label</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the total number of records in component</description>
			<name>totalResults</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description>It indicates the default number of results per page. Default: 60. Options: 20,40,60,80,100</description>
			<name>resultsPerPage</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be search feature. Default: false</description>
			<name>search</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be paginated. Default: true</description>
			<name>paginate</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be export feature. Default: true</description>
			<name>export</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>Indicates the url component a ser utilizada caso haja paginação</description>
			<name>url</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be rendered</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>Indicates the component title when there are no lines available</description>
			<name>noRowText</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:grid label="Persons" url="/component/grid" data="${ persons }" var="person" noRowText="No records found"&gt;
				&lt;html:gridColumn label="Identification" exportable="true"&gt;
					${ person.id }
				&lt;/html:gridColumn&gt;
				&lt;html:gridColumn label="Name" exportable="true"&gt;
					${ person.name }
				&lt;/html:gridColumn&gt;
			&lt;/html:grid&gt; </example>
	</tag>

	<tag>
		<description>Renders a grid column</description>
		<display-name>Grid</display-name>
		<name>gridColumn</name>
		<tag-class>com.jslsolucoes.tagria.tag.html.tag.GridColumnTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the label component</description>
			<name>label</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.util.Collection</type>
		</attribute>
		<attribute>
			<description>Indicates whether the component value is of type boolean</description>
			<name>booleanType</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates whether the column should be collapsable</description>
			<name>collapsable</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates whether the column should be exported</description>
			<name>exportable</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>Indicates the alignment of the content. Default: left. Options: left, center, right</description>
			<name>align</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates where hide column depending of viewport. Options: xs,md,lg,sm</description>
			<name>hideOnViewport</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be rendered</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>Indicates the component state. Default: default. Options: danger, info, success, default</description>
			<name>state</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:grid label="Pessoas" url="/component/grid" data="${ pessoas }" var="pessoa" noRowText="Não há pessoas disponíveis"&gt;
				&lt;html:gridColumn label="Identificação" exportable="true"&gt;
					${ pessoa.id }
				&lt;/html:gridColumn&gt;
				&lt;html:gridColumn label="Nome" exportable="true"&gt;
					${ pessoa.nome }
				&lt;/html:gridColumn&gt;
			&lt;/html:grid&gt; </example>
	</tag>

	

	<tag>
		<description>Renders a mask on a particular component</description>
		<display-name>Mask</display-name>
		<name>mask</name>
		<tag-class>com.jslsolucoes.tagria.tag.html.tag.MaskTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the mask to be used</description>
			<name>mask</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the component name a ser incorporado a mascara</description>
			<name>attachTo</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates whether the fill should occur behind forward</description>
			<name>reverse</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<example>
			&lt;html:input name="test"/&gt;
			&lt;html:mask mask="99/99/9999" attachTo="test"/&gt; </example>
	</tag>

	
</taglib>  