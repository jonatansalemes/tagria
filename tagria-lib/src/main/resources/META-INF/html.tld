<?xml version="1.0" encoding="UTF-8" ?>
<taglib xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee 
http://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd"
	version="2.0">

	<description>Tagria html library</description>
	<display-name>Tagria html library</display-name>
	<tlib-version>3.0</tlib-version>
	<short-name>html</short-name>
	<uri>http://tagrialib.jslsolucoes.com/tags/html</uri>
	
	<tag>
		<description>Renders a carousel</description>
		<display-name>Carousel</display-name>
		<name>carousel</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.CarouselTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the id for carousel</description>
			<name>id</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:carousel&gt;
				&lt;html:carouselItem active="true" label="Item 1" description="Description 1"&gt;
					&lt;html:carouselImage url="https://jslsolucoes.com/wp-content/uploads/logo.png" width="200" height="200" alt="logo"/&gt;
				&lt;/html:carouselItem&gt;
				&lt;html:carouselItem label="Item 2" description="Description 2"&gt;
					&lt;html:carouselImage url="https://jslsolucoes.com/wp-content/uploads/logo.png" width="200" height="200" alt="logo"/&gt;
				&lt;/html:carouselItem&gt;
			&lt;/html:carousel&gt; 
		</example>
	</tag>
	
	<tag>
		<description>Renders a carousel item</description>
		<display-name>Carousel</display-name>
		<name>carouselItem</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.CarouselItemTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the label of carousel item</description>
			<name>label</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the description of carousel item</description>
			<name>description</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component must start activated. Default: false. Options: true,false</description>
			<name>active</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be rendered. Default : true</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<example>
			&lt;html:carousel&gt;
				&lt;html:carouselItem active="true" label="Item 1" description="Description 1"&gt;
					&lt;html:carouselImage url="https://jslsolucoes.com/wp-content/uploads/logo.png" width="200" height="200" alt="logo"/&gt;
				&lt;/html:carouselItem&gt;
				&lt;html:carouselItem label="Item 2" description="Description 2"&gt;
					&lt;html:carouselImage url="https://jslsolucoes.com/wp-content/uploads/logo.png" width="200" height="200" alt="logo"/&gt;
				&lt;/html:carouselItem&gt;
			&lt;/html:carousel&gt; 
		</example>
	</tag>
	
	
	<tag>
		<description>Renders an carousel image</description>
		<display-name>Carousel</display-name>
		<name>carouselImage</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.CarouselImageTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the height component</description>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description>Indicates the image width</description>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description>It indicates if the component should be rendered. Default : true</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates the alt of image</description>
			<name>alt</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates if the component must be loaded from cdn</description>
			<name>cdn</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>Indicates the image url</description>
			<name>url</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:carousel&gt;
				&lt;html:carouselItem&gt;
					&lt;html:carouselImage url="/image/person.png" alt="logo"/&gt;
				&lt;/html:carouselItem&gt;
			&lt;/html:carousel&gt;
		</example>
	</tag>
	
	<tag>
		<description>Renders a jumbotron</description>
		<display-name>Misc</display-name>
		<name>jumbotron</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.JumbotronTag</tag-class>
		<body-content>scriptless</body-content>
		<example>
			&lt;html:jumbotron&gt; &lt;html:h1&gt; Header &lt;/html:h1&gt; &lt;/html:jumbotron&gt; </example>
	</tag>
	
	<tag>
		<description>Renders a mask in currency format for a particular input</description>
		<display-name>Mask</display-name>
		<name>currencyMask</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.CurrencyMaskTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the component name to attach currency mask</description>
			<name>attachTo</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the component selector to attach currency mask</description>
			<name>attachToSelector</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:input name="teste" value="0" format="currency"/&gt;
			&lt;html:currencyMask attachTo="teste"/&gt; </example>
	</tag>
	
	<tag>
		<description>Renders event on mask after any key press</description>
		<display-name>Mask</display-name>
		<name>maskOnKeyPress</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.MaskTagOnKeyPress</tag-class>
		<body-content>scriptless</body-content>
		<example>
			&lt;html:input name="teste"/&gt;
			&lt;html:mask mask="(00) 0000-00000" attachTo="teste"&gt;
				&lt;html:maskOnKeyPress&gt;
				    var masks = ['(00) 0000-00000', '(00) 00000-0000'];
					mask = (value.length > 14) ? masks[1] : masks[0];
					$('#'+$(field[0]).attr('id')).mask(mask,options);
				&lt;/html:maskOnKeyPress&gt;
			&lt;/html:mask&gt; </example>
	</tag>
	
	<tag>
		<description>Renders a h1</description>
		<display-name>Html</display-name>
		<name>h1</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.H1Tag</tag-class>
		<body-content>scriptless</body-content>
		<example>
			&lt;html:h1&gt; Cabecalho &lt;/html:h1&gt; </example>
	</tag>
	
	<tag>
		<description>Renders a menu link</description>
		<display-name>Menu</display-name>
		<name>menuLink</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.MenuLinkTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the icon to be used. available list https://fontawesome.com/icons</description>
			<name>icon</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the id of menu link</description>
			<name>id</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the URL to be used</description>
			<name>url</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates the label to be used</description>
			<name>label</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the target browser. Default: _self. Options: _self, _parent, _blank, namedeumiframe</description>
			<name>target</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be rendered. Default : true</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<example>
			&lt;html:menu&gt;
				&lt;html:menuCollapse attachToSelector="#block1"&gt;
					
				&lt;/html:menuCollapse&gt;
				&lt;html:menuCollapsable id="block1"&gt;
					&lt;html:menuLink label="Menu Link" url="#" /&gt;
				&lt;/html:menuCollapsable&gt;
			&lt;/html:menu&gt; 
		</example>
	</tag>
	
	<tag>
		<description>Renders a h3</description>
		<display-name>Html</display-name>
		<name>h3</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.H3Tag</tag-class>
		<body-content>scriptless</body-content>
		<example>
			&lt;html:h3&gt; Cabecalho &lt;/html:h3&gt; </example>
	</tag>
	
	<tag>
		<description>Renders a block with top and bottom spacing</description>
		<display-name>Misc</display-name>
		<name>block</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.BlockTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates whether the component should be rendered . Default : true</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>Indicates the align of text inside block. Default: left . Options: left,center,right </description>
			<name>align</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates size of margin top and left . Default : 3. Options: 1-5</description>
			<name>margin</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Integer</type>
		</attribute>
		<example>
			&lt;html:block margin="3"&gt;
				Meu bloco de componentes
			&lt;/html:block&gt; </example>
	</tag>
	
	<tag>
		<description>Renders a data list component</description>
		<display-name>Input</display-name>
		<name>dataList</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.DataListTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the id for the component</description>
			<name>id</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the collection to be iterated in component</description>
			<name>data</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.util.Collection</type>
		</attribute>
		<attribute>
			<description>Indicates the map to be iterated in component</description>
			<name>map</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.util.Map</type>
		</attribute>
		<attribute>
			<description>Indicates that component has fixed options</description>
			<name>fixed</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates the name of the variable java to be made available the object of iteration</description>
			<name>var</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:input name="dl" list="myDatalist1"/&gt;
			&lt;html:dataList id="myDatalist1" data="${ persons }" var="person"&gt;
				&lt;html:option value="${ person.id }"&gt;
					${ person.name }
				&lt;/html:option&gt;
			&lt;/html:dataList&gt;
		</example>
	</tag>
	
	<tag>
		<description>Renders a datePicker for a input</description>
		<display-name>Picker</display-name>
		<name>datePicker</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.DatePickerTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the component that triggers the date picker</description>
			<name>attachTo</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the minimum day for date choice</description>
			<name>min</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Integer</type>
		</attribute>
		<example>
			&lt;html:input name="input1" placeholder="Date birth" /&gt;
			&lt;html:datePicker attachTo="input1" min="0"/&gt; </example>
	</tag>

	<tag>
		<description>Renders an event after datePicker select date for a input</description>
		<display-name>Picker</display-name>
		<name>datePickerOnSelect</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.DatePickerOnSelectTag</tag-class>
		<body-content>scriptless</body-content>
		<example>
			&lt;html:input name="input1" placeholder="Date birth" /&gt;
			&lt;html:datePicker attachTo="input1" min="0"&gt;
				&lt;html:datePickerOnSelect&gt;
					/* Available variables on select dateText,inst  */
					alert(dateText);
				&lt;/html:datePickerOnSelect&gt;
			&lt;/html:datePicker&gt; </example>
	</tag>
	
	<tag>
		<description>Renders a google recaptcha</description>
		<display-name>Misc</display-name>
		<name>recaptcha</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.RecaptchaTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the site key available in google account developer for recaptcha</description>
			<name>siteKey</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:recaptcha siteKey="yourapikey" &gt;
				
			&lt;/html:recaptcha&gt; </example>
	</tag>
	
	<tag>
		<description>Renders a data block iteration</description>
		<display-name>Layout</display-name>
		<name>dataBlock</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.DataBlockTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates the collection to be iterated by the component</description>
			<name>data</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.util.Collection</type>
		</attribute>
		<attribute>
			<description>It indicates the name of the variable java to be made available the object of iteration</description>
			<name>var</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the number of columns to fill to extra small viewport. Options: 1 to 12</description>
			<name>extraSmall</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description>Indicates the number of columns to fill to small viewport. Options: 1 to 12</description>
			<name>small</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description>Indicates the number of columns to fill to medium viewport. Options: 1 to 12</description>
			<name>medium</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description>Indicates the number of columns to fill to large viewport. Options: 1 to 12</description>
			<name>large</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Integer</type>
		</attribute>
		<example>
			&lt;html:dataBlock limit="12" extraSmall="12" medium="4" small="4" large="1" data="${ persons }" var="person"&gt;
				&lt;html:alert state="success"&gt;
					${ person.name }
				&lt;/html:alert&gt;
			&lt;/html:dataBlock&gt;
		</example>
	</tag>
	
	<tag>
		<description>Renders a select box</description>
		<display-name>Input</display-name>
		<name>select</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.SelectTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates a css class to the component</description>
			<name>cssClass</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the collection to be iterated in component</description>
			<name>data</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.util.Collection</type>
		</attribute>
		<attribute>
			<description>Indicates the map to be iterated in component</description>
			<name>map</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.util.Map</type>
		</attribute>
		<attribute>
			<description>Indicates whether the component form is mandatory in form</description>
			<name>required</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>Indicates that component has fixed options</description>
			<name>fixed</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>Indicates the value selected in the component</description>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the component name</description>
			<name>name</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates the name of the variable java to be made available the object of iteration</description>
			<name>var</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:select name="select1" data="${ persons }" var="person"&gt;
				&lt;html:option value="${ person.id }"&gt;
					${ person.name }
				&lt;/html:option&gt;
			&lt;/html:select&gt;
		</example>
	</tag>

	<tag>
		<description>Renders an option of a select box</description>
		<display-name>Input</display-name>
		<name>option</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.OptionTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the value of the component</description>
			<name>value</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:select name="select1" data="${ persons }" var="person"&gt;
				&lt;html:option value="${ person.id }"&gt;
					${ person.name }
				&lt;/html:option&gt;
			&lt;/html:select&gt;
		</example>
	</tag>
	
	<tag>
		<description>Renders an textarea</description>
		<display-name>Input</display-name>
		<name>textarea</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.TextareaTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the component name</description>
			<name>name</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates placeholder for textarea</description>
			<name>placeholder</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates the value of the component</description>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component is required in the form</description>
			<name>required</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>Indicates the number of component lines</description>
			<name>rows</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description>It indicates a css class to the component</description>
			<name>cssClass</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:textarea name="textarea1" rows="3"/&gt; </example>
	</tag>
	
	<tag>
		<description>Renders a detail table</description>
		<display-name>Detail table</display-name>
		<name>detailTable</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.DetailTableTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the label component</description>
			<name>label</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the collection to be iterated in component</description>
			<name>data</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.util.Collection</type>
		</attribute>
		<attribute>
			<description>It indicates the name of the variable java to be made available the object of iteration</description>
			<name>var</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the minimum number of lines to be filled</description>
			<name>atLeast</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should start without lines</description>
			<name>empty</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>Indicates a javascript function to be performed after inserting a row</description>
			<name>afterInsert</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:form action="#" label="Form with details"&gt;
				&lt;html:formGroup&gt;
					&lt;html:detailTable atLeast="1" label="Persons details"&gt;
						&lt;html:detailTableColumn label="Name" required="true"&gt;
							&lt;html:input name="names[]" required="true"/&gt;
						&lt;/html:detailTableColumn&gt;
						&lt;html:detailTableColumn label="Age" required="true"&gt;
							&lt;html:input name="ages[]" type="number" required="true"/&gt;
						&lt;/html:detailTableColumn&gt;
					&lt;/html:detailTable&gt;
				&lt;/html:formGroup&gt;
			&lt;/html:form&gt;
		</example>
	</tag>

	<tag>
		<description>Renders a column in the detail table</description>
		<display-name>Detail table</display-name>
		<name>detailTableColumn</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.DetailTableColumnTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the label component</description>
			<name>label</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component has its required on a form</description>
			<name>required</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<example>
			&lt;html:form action="#" label="Form with details"&gt;
				&lt;html:formGroup&gt;
					&lt;html:detailTable atLeast="1"&gt;
						&lt;html:detailTableColumn label="Name" required="true"&gt;
							&lt;html:input name="names[]" required="true"/&gt;
						&lt;/html:detailTableColumn&gt;
						&lt;html:detailTableColumn label="Age" required="true"&gt;
							&lt;html:input name="ages[]" type="number" required="true"/&gt;
						&lt;/html:detailTableColumn&gt;
					&lt;/html:detailTable&gt;
				&lt;/html:formGroup&gt;
			&lt;/html:form&gt;
		</example>
	</tag>
	
	
	<tag>
		<description>Renders an icon</description>
		<display-name>Image</display-name>
		<name>icon</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.IconTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the icon to be used. available list https://fontawesome.com/icons</description>
			<name>icon</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the id for the component</description>
			<name>id</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be rendered. Default : true</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<example>
			&lt;html:icon icon="cog" /&gt; </example>
	</tag>
	
	<tag>
		<description>Renders a table</description>
		<display-name>Table</display-name>
		<name>table</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.TableTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates whether the table should be striped rows. Default : false</description>
			<name>stripe</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates whether the table should be dark theme. Default : false</description>
			<name>dark</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates whether the table should be hovered rows. Default : false</description>
			<name>hover</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates whether the table should be small size. Default : false</description>
			<name>small</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates whether the table should be bordered. Default : false</description>
			<name>border</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<example>
			&lt;html:table&gt;
				&lt;html:tableBody&gt;
					&lt;html:tableLine&gt;
						&lt;html:tableColumn&gt;Column 1&lt;/html:tableColumn&gt;
					&lt;/html:tableLine&gt;
					&lt;html:tableLine&gt;
						&lt;html:tableColumn&gt;Value 1&lt;/html:tableColumn&gt;
					&lt;/html:tableLine&gt;
				&lt;/html:tableBody&gt;
			&lt;/html:table&gt;
		</example>
	</tag>

	<tag>
		<description>Renders a line of a table</description>
		<display-name>Table</display-name>
		<name>tableLine</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.TableLineTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates whether the component should be rendered. Default : true</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>Indicates the table line state. Default: default. Options: success, danger, info, default, primary</description>
			<name>state</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:table&gt;
				&lt;html:tableBody&gt;
					&lt;html:tableLine&gt;
						&lt;html:tableColumn&gt;Column 1&lt;/html:tableColumn&gt;
					&lt;/html:tableLine&gt;
					&lt;html:tableLine state="danger"&gt;
						&lt;html:tableColumn&gt;Value 1&lt;/html:tableColumn&gt;
					&lt;/html:tableLine&gt;
				&lt;/html:tableBody&gt;
			&lt;/html:table&gt;
		</example>
	</tag>

	<tag>
		<description>Renders a table column</description>
		<display-name>Table</display-name>
		<name>tableColumn</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.TableColumnTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the column state. Default: default. Options: success, danger, info, default, primary</description>
			<name>state</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates a label for column content</description>
			<name>label</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates a format in which the value must be converted. Options: date,datetime, timestamp, hour, currency, zipCode, cnpj, tel, cpf</description>
			<name>format</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the number of columns that this column should fill</description>
			<name>colspan</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Integer</type>
		</attribute>
		<example>
			&lt;html:table&gt;
				&lt;html:tableBody&gt;
					&lt;html:tableLine&gt;
						&lt;html:tableColumn&gt;Value 1&lt;/html:tableColumn&gt;
						&lt;html:tableColumn state="info"&gt;Value 2&lt;/html:tableColumn&gt;
					&lt;/html:tableLine&gt;
					&lt;html:tableLine&gt;
						&lt;html:tableColumn colspan="2">Value colspan 3&lt;/html:tableColumn&gt;
					&lt;/html:tableLine&gt;
				&lt;/html:tableBody&gt;
			&lt;/html:table&gt;
		</example>
	</tag>
	
	<tag>
		<description>Renders a table caption</description>
		<display-name>Table</display-name>
		<name>tableCaption</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.TableCaptionTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates a label for column content</description>
			<name>label</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:table&gt;
				&lt;html:tableCaption&gt;
					Caption
				&lt;/html:tableCaption&gt;
				&lt;html:tableBody&gt;
					&lt;html:tableLine&gt;
						&lt;html:tableColumn&gt;Column 1&lt;/html:tableColumn&gt;
					&lt;/html:tableLine&gt;
					&lt;html:tableLine state="danger"&gt;
						&lt;html:tableColumn&gt;Value 1&lt;/html:tableColumn&gt;
					&lt;/html:tableLine&gt;
				&lt;/html:tableBody&gt;
			&lt;/html:table&gt;
		</example>
	</tag>
	
	<tag>
		<description>Renders a table body</description>
		<display-name>Table</display-name>
		<name>tableBody</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.TableBodyTag</tag-class>
		<body-content>scriptless</body-content>
		<example>
			&lt;html:table&gt;
				&lt;html:tableCaption&gt;
					Caption
				&lt;/html:tableCaption&gt;
				&lt;html:tableBody&gt;
					&lt;html:tableLine&gt;
						&lt;html:tableColumn&gt;Column 1&lt;/html:tableColumn&gt;
					&lt;/html:tableLine&gt;
					&lt;html:tableLine state="danger"&gt;
						&lt;html:tableColumn&gt;Value 1&lt;/html:tableColumn&gt;
					&lt;/html:tableLine&gt;
				&lt;/html:tableBody&gt;
			&lt;/html:table&gt;
		</example>
	</tag>
	
	<tag>
		<description>Renders a table</description>
		<display-name>Table</display-name>
		<name>tableHeader</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.TableHeaderTag</tag-class>
		<body-content>scriptless</body-content>
		
		<attribute>
			<description>It indicates whether the table header should be dark theme. Default : false</description>
			<name>dark</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates whether the table header should be light theme. Default : false</description>
			<name>light</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		
		<example>
			&lt;html:table&gt;
				&lt;html:tableHeader light="true"&gt;
					&lt;html:tableLine&gt;
						&lt;html:tableHead&gt;Head 1&lt;/html:tableHead&gt;
					&lt;/html:tableLine&gt;
				&lt;/html:tableHeader&gt;
			&lt;/html:table&gt;
		</example>
	</tag>
	
	<tag>
		<description>Renders a table head</description>
		<display-name>Table</display-name>
		<name>tableHead</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.TableHeadTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates a label for column head content</description>
			<name>label</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:table&gt;
				&lt;html:tableHeader light="dark"&gt;
					&lt;html:tableLine&gt;
						&lt;html:tableHead label="Head 1"/&gt;
					&lt;/html:tableLine&gt;
				&lt;/html:tableHeader&gt;
			&lt;/html:table&gt;
		</example>
	</tag>
	
	
	
	
	<tag>
		<description>Renders a card</description>
		<display-name>Card</display-name>
		<name>card</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.CardTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates a css class to the component</description>
			<name>cssClass</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the card state. Default: primary. Options: success, danger, info, default, primary</description>
			<name>state</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be visible. Default : true</description>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>Indicates the id for card component</description>
			<name>id</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be rendered. Default : true</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		
		<example>
			&lt;html:card&gt;
				&lt;html:cardHeader&gt;
					Title
				&lt;/html:cardHeader&gt;
				&lt;html:cardBody&gt;
					Components
				&lt;/html:cardBody&gt;
			&lt;/html:card>
		</example>
	</tag>
	
	<tag>
		<description>Renders an card image</description>
		<display-name>Card</display-name>
		<name>cardImage</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.CardImageTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates if the component should be rendered. Default : true</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>Indicates the height component</description>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description>Indicates the image width</description>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description>It indicates the alt of image</description>
			<name>alt</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates if the component must be loaded from cdn</description>
			<name>cdn</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>Indicates the image url</description>
			<name>url</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:card&gt;
				&lt;html:cardImage url="/image/person.png" alt="logo"/&gt;
			&lt;/html:card>
		</example>
	</tag>
	
	<tag>
		<description>Renders a title on the card</description>
		<display-name>Card</display-name>
		<name>cardTitle</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.CardTitleTag</tag-class>
		<body-content>scriptless</body-content>
		<example>
			&lt;html:card&gt;
				&lt;html:cardBody&gt;
					&lt;html:cardTitle&gt;
						Title
					&lt;/html:cardTitle&gt;
				&lt;/html:cardBody&gt;
			&lt;/html:card>
		</example>
	</tag>
	
	<tag>
		<description>Renders a text on the card</description>
		<display-name>Card</display-name>
		<name>cardText</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.CardTextTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates a css class to the component</description>
			<name>cssClass</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:card&gt;
				&lt;html:cardBody&gt;
					&lt;html:cardText&gt;
						Text
					&lt;/html:cardText&gt;
				&lt;/html:cardBody&gt;
			&lt;/html:card>
		</example>
	</tag>

	<tag>
		<description>Renders a card header</description>
		<display-name>Card</display-name>
		<name>cardHeader</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.CardHeaderTag</tag-class>
		<body-content>scriptless</body-content>
		<example>
			&lt;html:card&gt;
				&lt;html:cardHeader&gt;
					Title
				&lt;/html:cardHeader&gt;
				&lt;html:cardBody&gt;
					Outros componentes
				&lt;/html:cardBody&gt;
			&lt;/html:card>
		</example>
	</tag>

	<tag>
		<description>Renders the body card</description>
		<display-name>Card</display-name>
		<name>cardBody</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.CardBodyTag</tag-class>
		<body-content>scriptless</body-content>
		<example>
			&lt;html:card&gt;
				&lt;html:cardHeader&gt;
					Title
				&lt;/html:cardHeader&gt;
				&lt;html:cardBody&gt;
					Componentes
				&lt;/html:cardBody&gt;
			&lt;/html:card>
		</example>
	</tag>
	
	<tag>
		<description>Renders the footer card</description>
		<display-name>Card</display-name>
		<name>cardFooter</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.CardFooterTag</tag-class>
		<body-content>scriptless</body-content>
		<example>
			&lt;html:card&gt;
				&lt;html:cardHeader&gt;
					Title
				&lt;/html:cardHeader&gt;
				&lt;html:cardBody&gt;
					Components
				&lt;/html:cardBody&gt;
				&lt;html:cardFooter&gt;
					Components
				&lt;/html:cardFooter&gt;
			&lt;/html:card>
		</example>
	</tag>
	
	
	<tag>
		<description>Renders a component with collapsable effect</description>
		<display-name>Misc</display-name>
		<name>collapsable</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.CollapsableTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates the label to be used in collapsable</description>
			<name>label</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates if component must be opened. Default : false. Options : true,false</description>
			<name>opened</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>Indicates the status of the group. Default: primary. Options: default, primary, danger, info, success</description>
			<name>state</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:collapsable label="Label 1"&gt;
				Components
			&lt;/html:collapsable&gt; </example>
	</tag>
	
	<tag>
		<description>Renders a panel tabs</description>
		<display-name>Tab</display-name>
		<name>tabPanel</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.TabPanelTag</tag-class>
		<body-content>scriptless</body-content>
		<example>
			&lt;html:tabPanel&gt;
				&lt;html:tab label="Tab 1" active="true"&gt;
					Tab content
				&lt;/html:tab&gt;
				&lt;html:tab label="Tab 2" url="/app/welcome"/&gt;
			&lt;/html:tabPanel&gt; </example>
	</tag>

	<tag>
		<description>Renders a single tab</description>
		<display-name>Tab</display-name>
		<name>tab</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.TabTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates whether the tab should be initiated selected</description>
			<name>active</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>Indicates the label of the tab</description>
			<name>label</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the url to be incorporated into the tab. If not indicated it renders content in the component body.</description>
			<name>url</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates whether the tab should be rendered</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates whether the tab should be recharged to clicar.Default: true.</description>
			<name>reloadOnSelect</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<example>
			&lt;html:tabPanel&gt;
				&lt;html:tab label="Tab 1" active="true"&gt;
					Tab content
				&lt;/html:tab&gt;
				&lt;html:tab label="Tab 2" url="/app/welcome"/&gt;
			&lt;/html:tabPanel&gt; </example>
	</tag>
	
	<tag>
		<description>Renders a modal confirmation</description>
		<display-name>Misc</display-name>
		<name>confirm</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.ConfirmTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates the label of the title modal</description>
			<name>label</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the URL to confirm the operation</description>
			<name>url</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the component target. Default: _self. Options: _blank, _newtab, nomedoiframe</description>
			<name>target</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the component name that triggers the confirm screen</description>
			<name>attachTo</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the component selector that triggers the confirm screen</description>
			<name>attachToSelector</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
		    &lt;html:button id="botao" label="Confirmar algo"/&gt;
			&lt;html:confirm url="#" label="Titulo do modal" attachToSelector="#botao"&gt;
								
			&lt;/html:confirm&gt; </example>
	</tag>
	
	<tag>
		<description>Renders a h2</description>
		<display-name>Html</display-name>
		<name>h2</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.H2Tag</tag-class>
		<body-content>scriptless</body-content>
		<example>
			&lt;html:h2&gt; Header &lt;/html:h2&gt; </example>
	</tag>
	
	<tag>
		<description>Renders a horizontal line</description>
		<display-name>Html</display-name>
		<name>hr</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.HrTag</tag-class>
		<body-content>scriptless</body-content>
		<example>
			&lt;html:hr/&gt; 
		</example>
	</tag>
	
	<tag>
		<description>Renders a small</description>
		<display-name>Html</display-name>
		<name>small</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.SmallTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates a CSS class to the component</description>
			<name>cssClass</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:small&gt; small text &lt;/html:small&gt; </example>
	</tag>
	
	<tag>
		<description>Format values</description>
		<display-name>Misc</display-name>
		<name>format</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.FormatTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates a type format in which the value must be converted. Options: date,datetime, timestamp, hour, currency, zipCode, cnpj, tel, cpf</description>
			<name>type</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:format type="currency"&gt; ${ myValue} &lt;/html:format&gt;
		</example>
	</tag>
	
	<tag>
		<description>Renders a paragraf</description>
		<display-name>Html</display-name>
		<name>p</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.PTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates whether the component should be rendered. Default : true</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<example>
			&lt;html:p&gt; Content &lt;/html:p&gt; </example>
	</tag>

	<tag>
		<description>Renders a source block of a particular language without executing it</description>
		<display-name>Misc</display-name>
		<name>code</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.CodeTag</tag-class>
		<body-content>scriptless</body-content>
		<example>
			&lt;html:code&gt;
				private class Java {
					private String id;
					private String name;
				}
			&lt;/html:code&gt; </example>
			
	</tag>
	
	<tag>
		<description>Renders a triggered event for a given component</description>
		<display-name>Javascript</display-name>
		<name>jsEvent</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.JsEventTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the component name to be achieved</description>
			<name>attachTo</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the component selector that triggers the event</description>
			<name>attachToSelector</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the javascript event to be fired</description>
			<name>event</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be rendered. Default : true</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<example>
			&lt;html:input name="input1" placeholder="Focus in and focus out" /&gt;
			
			&lt;html:jsEvent attachTo="input1" event="blur"&gt;
			    alert('blur');
			&lt;/html:jsEvent&gt; </example>
	</tag>
	
	<tag>
		<description>Renders a modal block</description>
		<display-name>Misc</display-name>
		<name>modal</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.ModalTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the size of modal. Default none. Options: xl,sm,lg</description>
			<name>size</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the modal id for direct manipulation of events</description>
			<name>id</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates the label of the title modal</description>
			<name>label</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the component name that triggers the modal screen</description>
			<name>attachTo</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the component selector that triggers the modal screen</description>
			<name>attachToSelector</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates if modal can be closeable. Default : true. Options : true,false</description>
			<name>closeable</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>Indicates if modal is vertically centered. Default : false. Options : true,false</description>
			<name>centered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>Indicates if component is opened on load. Default : false. Options : true,false</description>
			<name>open</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be rendered</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<example>
		    &lt;html:button id="botao" label="Abrir modal"/&gt;
			&lt;html:modal label="Titulo do modal" attachToSelector="botao"&gt;
				Outros componentes 
				
				&lt;html:toolbar&gt;
					Componentes
				&lt;/html:toolbar&gt;
				
			&lt;/html:modal&gt; </example>
	</tag>

	<tag>
		<description>Renders a view with all header. This view must be declared ONLY ONCE and main tag used throughout view</description>
		<display-name>Misc</display-name>
		<name>view</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.ViewTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the title of the current page</description>
			<name>title</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates if ajax auto animation is loaded for view</description>
			<name>ajaxAnimation</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<example>
			&lt;html:view&gt;
				Todos os componentes necessários
			&lt;/html:view&gt; </example>
	</tag>

	<tag>
		<description>Renders a main container block with a standard margin</description>
		<display-name>Layout</display-name>
		<name>container</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.ContainerTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates whether a container must be responsive to the screen 100%</description>
			<name>fluid</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<example>
			
			&lt;html:alert state="info"&gt;
				Componente fora do container
			&lt;/html:alert&gt;
			
			&lt;html:container&gt;
				&lt;html:alert state="info"&gt;
					Componente dentro do container
				&lt;/html:alert&gt;
			&lt;/html:container&gt; </example>
	</tag>

	<tag>
		<description>Renders an alert box</description>
		<display-name>Misc</display-name>
		<name>alert</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.AlertTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the id for the component</description>
			<name>id</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates a css class to the component</description>
			<name>cssClass</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates a label for the alert.</description>
			<name>label</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component can be closed. Default: false</description>
			<name>dismissible</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates the state where the box should be rendered. Default: warning. Options: primary, secondary, light, dark, warning, success, danger, info</description>
			<name>state</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be rendered. Default : true</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be visible. Default : true</description>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<example>
			&lt;html:alert state="info"&gt;
				Caixa de informação
			&lt;/html:alert&gt; </example>
	</tag>



	<tag>
		<description>Renders a form</description>
		<display-name>Form</display-name>
		<name>form</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.FormTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the action of submission</description>
			<name>action</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the target of submission. Default : _self. Options : _blank,_self,_parent,_top,iframe</description>
			<name>target</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates the method to be used. Default: post. Options: post, get</description>
			<name>method</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the name of form</description>
			<name>name</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates a validation to be performed on the data form</description>
			<name>validation</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the label of the form</description>
			<name>label</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be rendered</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates whether the form should have file support</description>
			<name>multipart</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<example>
		
			&lt;html:form action="#"&gt;
				&lt;html:formGroup label="Field 1" required="true"&gt;
					&lt;html:input required="true" name="field1"/&gt;
				&lt;/html:formGroup&gt;
				&lt;html:formGroup label="Field 2"&gt;
					&lt;html:input name="field2"/&gt;
				&lt;/html:formGroup&gt;
				&lt;html:toolbar&gt;
					&lt;html:buttonGroup&gt;
						&lt;html:button type="submit" label="Save"/&gt;
					&lt;/html:buttonGroup&gt;
				&lt;/html:toolbar&gt;
			&lt;/html:form&gt; </example>
	</tag>

	<tag>
		<description>Renders a component grouping in the form</description>
		<display-name>Form</display-name>
		<name>formGroup</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.FormGroupTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the label of the group</description>
			<name>label</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the id of the group</description>
			<name>id</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates the element to be oriented the label</description>
			<name>forElement</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates whether the completion of the internal component should be mandatory</description>
			<name>required</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be rendered</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be visible</description>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<example>
			&lt;html:form action="#"&gt;
				&lt;html:formGroup forElement="field1" label="Campo 1" required="true"&gt;
					&lt;html:input required="true" name="field1"/&gt;
				&lt;/html:formGroup&gt;
				&lt;html:formGroup label="Campo 2"&gt;
					&lt;html:input name="field2"/&gt;
				&lt;/html:formGroup&gt;
			&lt;/html:form&gt; </example>
	</tag>

	<tag>
		<description>Renders a line of columns of subdivision (divided into 12 sections combined with the col tag)</description>
		<display-name>Form</display-name>
		<name>row</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.RowTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates a CSS class to the component</description>
			<name>cssClass</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:form action="#"&gt;
				&lt;html:formGroup forElement="field1" label="Campo 1" required="true"&gt;
					&lt;html:row&gt;
						&lt;html:col extraSmall="6"&gt;
							&lt;html:input required="true" name="field1"/&gt;
						&lt;/html:col&gt;
						&lt;html:col extraSmall="6"&gt;
							&lt;html:input name="field2"/&gt;
						&lt;/html:col&gt;
					&lt;/html:row>
				&lt;/html:formGroup&gt;
			&lt;/html:form&gt; </example>
	</tag>

	<tag>
		<description>Renders a column within a row</description>
		<display-name>Form</display-name>
		<name>col</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.ColTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the number of columns to fill to extra small viewport. Options: 1 to 12</description>
			<name>extraSmall</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description>Indicates the number of columns to fill to small viewport. Options: 1 to 12</description>
			<name>small</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description>Indicates the number of columns to fill to medium viewport. Options: 1 to 12</description>
			<name>medium</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description>Indicates the number of columns to fill to large viewport. Options: 1 to 12</description>
			<name>large</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description>It indicates a CSS class to the component</description>
			<name>cssClass</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:form action="#"&gt;
				&lt;html:formGroup forElement="field1" label="Campo 1" required="true"&gt;
					&lt;html:row&gt;
						&lt;html:col extraSmall="3"&gt;
							&lt;html:input required="true" name="field1"/&gt;
						&lt;/html:col&gt;
						&lt;html:col extraSmall="9"&gt;
							&lt;html:input name="field2"/&gt;
						&lt;/html:col&gt;
					&lt;/html:row>
				&lt;/html:formGroup&gt;
			&lt;/html:form&gt; </example>
	</tag>

	<tag>
		<description>Renders an input</description>
		<display-name>Input</display-name>
		<name>input</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.InputTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates a data list to attach on input</description>
			<name>list</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates a CSS class to the component</description>
			<name>cssClass</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates a title for the component</description>
			<name>title</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates a format in which the value must be converted. Options: date,datetime, timestamp, hour, currency, zipCode, cnpj, tel, cpf</description>
			<name>format</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates the type of input. Default: text. Options: button, checkbox, color, date, datetime, datetime-local, email, file, hidden, image, month, number, password, radio, range, reset, search, submit, tel, text, time, url, week</description>
			<name>type</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the component&#39;s id</description>
			<name>id</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the component name</description>
			<name>name</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the component fill mark</description>
			<name>placeholder</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the value of the component</description>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should win the cursor focus</description>
			<name>focus</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component is required within a form</description>
			<name>required</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates the Padra to be followed in a particular field</description>
			<name>pattern</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be disabled. Default: false</description>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>Indicates the maximum number of characters to be filled</description>
			<name>maxLength</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description>Indicates the maximun number accepted</description>
			<name>max</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description>Indicates the minimum number accepted</description>
			<name>min</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description>Indicates if (radio, checkbox) if the component should be marked</description>
			<name>checked</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates whether the component supports multiple inputs</description>
			<name>multiple</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>Indicates which extensions supported in the case (file)</description>
			<name>accept</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:input name="field1"/&gt; 
		</example>
	</tag>

	<tag>
		<description>Renders a div</description>
		<display-name>Layout</display-name>
		<name>div</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.DivTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the component&#39;s id</description>
			<name>id</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates a CSS class to the component</description>
			<name>cssClass</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be rendered. Default : true.</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<example>
			&lt;html:div&gt;
				Conteudo
			&lt;/html:div&gt; </example>
	</tag>

	<tag>
		<description>Renders importing a js file or css</description>
		<display-name>Misc</display-name>
		<name>import</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.ImportTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the type of file to be imported. Options: js, css</description>
			<name>type</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the URL where the file</description>
			<name>url</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:import type="css" url="/css/example.css"/&gt;
			&lt;html:import type="js" url="/js/example.js"/&gt; </example>
	</tag>

	<tag>
		<description>Renders an image</description>
		<display-name>Image</display-name>
		<name>img</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.ImageTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates the label if the component can not be loaded</description>
			<name>alt</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component must follow a set on the properties cdn</description>
			<name>cdn</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be responsive</description>
			<name>responsive</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>Indicates the image url</description>
			<name>url</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the height component</description>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description>Indicates the image width</description>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description>It indicates a format for the component. Options: rounded, circle, thumbnail</description>
			<name>shape</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates a CSS class to the component</description>
			<name>cssClass</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:img url="/image/person.png" alt="logo" responsive="true"/&gt; </example>
	</tag>
	
	

	<tag>
		<description>Renders a link</description>
		<display-name>Html</display-name>
		<name>link</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.LinkTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the url component</description>
			<name>url</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates if component must check for url auth integration</description>
			<name>auth</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>Indicates the label component</description>
			<name>label</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be rendered</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>Indicates the component target. Default: _self. Options: _blank, _newtab, nomedoiframe</description>
			<name>target</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:link label="Meu link" url="#"/&gt; </example>
	</tag>
	
	
	
	
	
	<tag>
		<description>Renders a body</description>
		<display-name>Html</display-name>
		<name>body</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.BodyTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the CSS class to the component</description>
			<name>cssClass</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:body&gt; Content &lt;/html:body&gt; </example>
	</tag>

	<tag>
		<description>Renders an iframe</description>
		<display-name>Misc</display-name>
		<name>iframe</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.IframeTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the name of the iframe</description>
			<name>name</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates a CSS class to the component</description>
			<name>cssClass</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the id of the iframe</description>
			<name>id</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the URL where the iframe</description>
			<name>url</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:iframe url="/app/welcome" name="conteudo"/&gt; </example>
	</tag>
	
	
	<tag>
		<description>Renders a dropdown menu</description>
		<display-name>Menu</display-name>
		<name>menuDropDown</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.MenuDropDownTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the id for the component</description>
			<name>id</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates the label to be used in dropdown root</description>
			<name>label</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be rendered</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<example>
			&lt;html:menu&gt;
				&lt;html:menuCollapse attachToSelector="#block1"&gt;
					
				&lt;/html:menuCollapse&gt;
				&lt;html:menuCollapsable id="block1"&gt;
					&lt;html:menuDropDown label="Menu"&gt;
						&lt;html:menuDropDownItem label="Item 1" url="#"/&gt;
						&lt;html:menuDropDownDivider/&gt;
						&lt;html:menuDropDownItem label="Item 2" target="_blank" url="#"/&gt;
						&lt;html:menuDropDownItem icon="trash" label="Item 3" url="#"/&gt;
					&lt;/html:menuDropDown&gt;
				&lt;/html:menuCollapsable&gt;
			&lt;/html:menu&gt; 
		</example>
	</tag>

	<tag>
		<description>Renders a menu item on dropdown</description>
		<display-name>Menu</display-name>
		<name>menuDropDownItem</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.MenuDropDownItemTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the id for the component</description>
			<name>id</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the icon to be used in the menu icon. available list https://fontawesome.com/icons</description>
			<name>icon</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the URL to be used</description>
			<name>url</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates if component must check for url auth integration</description>
			<name>auth</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates the label to be used</description>
			<name>label</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the target browser. Default: _self. Options: _self, _parent, _blank, namedeumiframe</description>
			<name>target</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be rendered</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<example>
			&lt;html:menu&gt;
				&lt;html:menuCollapse attachToSelector="#block1"&gt;
					
				&lt;/html:menuCollapse&gt;
				&lt;html:menuCollapsable id="block1"&gt;
					&lt;html:menuDropDown label="Menu"&gt;
						&lt;html:menuDropDownItem label="Item 1" url="#"/&gt;
						&lt;html:menuDropDownDivider/&gt;
						&lt;html:menuDropDownItem label="Item 2" target="_blank" url="#"/&gt;
						&lt;html:menuDropDownItem icon="trash" label="Item 3" url="#"/&gt;
					&lt;/html:menuDropDown&gt;
				&lt;/html:menuCollapsable&gt;
			&lt;/html:menu&gt; 
		</example>
	</tag>
	
	<tag>
		<description>Renders a menu collapsable content group</description>
		<display-name>Menu</display-name>
		<name>menuCollapsable</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.MenuCollapsableTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the id of menu block to be collapsed</description>
			<name>id</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:menu&gt;
				
					&lt;html:menuCollapse attachToSelector="#block1"&gt;
					
					&lt;/html:menuCollapse&gt;
				
				&lt;html:menuCollapsable id="block1"&gt;
					menu components
				&lt;/html:menuCollapsable&gt;
				
			&lt;/html:menu&gt;
		</example>
	</tag>
	
	<tag>
		<description>Renders a menu collapse group</description>
		<display-name>Menu</display-name>
		<name>menuCollapse</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.MenuCollapseTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the component name that triggers the menu group</description>
			<name>attachTo</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the component selector that triggers the menu group</description>
			<name>attachToSelector</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:menu&gt;
				
					&lt;html:menuCollapse attachToSelector="#block1"&gt;
					
					&lt;/html:menuCollapse&gt;
				
				&lt;html:menuCollapsable id="block1"&gt;
					menu components
				&lt;/html:menuCollapsable&gt;
				
			&lt;/html:menu&gt;
		</example>
	</tag>
	
	<tag>
		<description>Renders a horizontal menu</description>
		<display-name>Menu</display-name>
		<name>menu</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.MenuTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates whether the component should be fixed. Default none. Options : top,bottom</description>
			<name>fixed</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:menu&gt;
				&lt;html:menuCollapse attachToSelector="#block1"&gt;
					
				&lt;/html:menuCollapse&gt;
				&lt;html:menuCollapsable id="block1"&gt;
					&lt;html:menuDropDown label="Menu"&gt;
						&lt;html:menuDropDownItem label="Item 1" url="#"/&gt;
						&lt;html:menuDropDownDivider/&gt;
						&lt;html:menuDropDownItem label="Item 2" target="_blank" url="#"/&gt;
						&lt;html:menuDropDownItem icon="trash" label="Item 3" url="#"/&gt;
					&lt;/html:menuDropDown&gt;
				&lt;/html:menuCollapsable&gt;
			&lt;/html:menu&gt; 
		</example>
	</tag>

	<tag>
		<description>Renders a logo in the navigation menu in text format</description>
		<display-name>Menu</display-name>
		<name>menuBrand</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.MenuBrandTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the URL to be called by clicking on the logo</description>
			<name>url</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates the label to be used in brand logo</description>
			<name>label</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:menu&gt;
				&lt;html:menuBrand label="Meu titulo" url="#"/&gt;
			&lt;/html:menu&gt; </example>
	</tag>

	<tag>
		<description>Renders a grid</description>
		<display-name>Grid</display-name>
		<name>grid</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.GridTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates the collection to be iterated by the component</description>
			<name>data</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.util.Collection</type>
		</attribute>
		<attribute>
			<description>It indicates the name of the variable java to be made available the object of iteration</description>
			<name>var</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates the name of the variable to be available to current iteration</description>
			<name>varStatus</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the label component</description>
			<name>label</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the total number of records in component</description>
			<name>totalResults</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description>It indicates the default number of results per page. Default: 60. Options: 20,40,60,80,100</description>
			<name>resultsPerPage</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be search feature. Default: false</description>
			<name>search</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be paginated. Default: true</description>
			<name>paginate</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be export feature. Default: true</description>
			<name>export</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>Indicates the url component a ser utilizada caso haja paginação</description>
			<name>url</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be rendered</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>Indicates the component title when there are no lines available</description>
			<name>noRowText</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:grid label="Persons" url="/component/grid" data="${ persons }" var="person" noRowText="No records found"&gt;
				&lt;html:gridColumn label="Identification" exportable="true"&gt;
					${ person.id }
				&lt;/html:gridColumn&gt;
				&lt;html:gridColumn label="Name" exportable="true"&gt;
					${ person.name }
				&lt;/html:gridColumn&gt;
			&lt;/html:grid&gt; </example>
	</tag>

	<tag>
		<description>Renders a grid column</description>
		<display-name>Grid</display-name>
		<name>gridColumn</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.GridColumnTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the label component</description>
			<name>label</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.util.Collection</type>
		</attribute>
		<attribute>
			<description>Indicates whether the component value is of type boolean</description>
			<name>booleanType</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates whether the column should be collapsable</description>
			<name>collapsable</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates whether the column should be exported</description>
			<name>exportable</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>Indicates the alignment of the content. Default: left. Options: left, center, right</description>
			<name>align</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates where hide column depending of viewport. Options: xs,md,lg,sm</description>
			<name>hideOnViewport</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates a format in which the content should be converted. Options: date,datetime, timestamp, hour, currency, zip code, cnpj, tel, cpf</description>
			<name>format</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be rendered</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>Indicates the component state. Default: default. Options: danger, info, success, default</description>
			<name>state</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:grid label="Pessoas" url="/component/grid" data="${ pessoas }" var="pessoa" noRowText="Não há pessoas disponíveis"&gt;
				&lt;html:gridColumn label="Identificação" exportable="true"&gt;
					${ pessoa.id }
				&lt;/html:gridColumn&gt;
				&lt;html:gridColumn label="Nome" exportable="true"&gt;
					${ pessoa.nome }
				&lt;/html:gridColumn&gt;
			&lt;/html:grid&gt; </example>
	</tag>

	<tag>
		<description>Renders a button</description>
		<display-name>Button</display-name>
		<name>button</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.ButtonTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the status of the button. Default: default. Options: default, primary, danger, info, success</description>
			<name>state</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the type of button. Default: button. Options: button, submit</description>
			<name>type</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the component linked to dismiss button. Default false. Options: true,false</description>
			<name>dismiss</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>Indicates if component must check for url auth integration</description>
			<name>auth</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates a CSS class to the component</description>
			<name>cssClass</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the url to be performed by the component</description>
			<name>url</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the icon to be used by the component. available list https://fontawesome.com/icons</description>
			<name>icon</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the component&#39;s id</description>
			<name>id</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the label component</description>
			<name>label</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the component target. Default: _self. Options: _blank, _newtab, _parent, nomedoiframe</description>
			<name>target</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the title button</description>
			<name>title</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be rendered. Default : true</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be blocked after click . Default : false</description>
			<name>autoblock</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be disabled. Default: false.</description>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<example>
			&lt;html:button url="#" icon="cog" label="botao" state="info"/&gt; </example>
	</tag>

	<tag>
		<description>Renders a toolbar for the component (Available for grid, form, card and modal)</description>
		<display-name>Misc</display-name>
		<name>toolbar</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.ToolbarTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates whether the component should be rendered</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<example>
			&lt;html:form action="#"&gt;
				&lt;html:formGroup label="Campo 1" required="true"&gt;
					&lt;html:input required="true" name="field1"/&gt;
				&lt;/html:formGroup&gt;
				&lt;html:formGroup label="Campo 2"&gt;
					&lt;html:input name="field2"/&gt;
				&lt;/html:formGroup&gt;
				
				&lt;html:toolbar&gt;
				    &lt;html:button state="primary" type="submit" label="Alterando label padrao"/&gt;
				&lt;/html:toolbar&gt;
			&lt;/html:form&gt; </example>
	</tag>

	<tag>
		<description>Renders a menu dropdown divider</description>
		<display-name>Menu</display-name>
		<name>menuDropDownDivider</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.MenuDropDownDividerTag</tag-class>
		<body-content>scriptless</body-content>
		<example>
			&lt;html:menu&gt;
				&lt;html:menuDropDown label="Menu"&gt;
					&lt;html:menuItem label="Item 1" url="#"/&gt;
					&lt;html:menuSeparator/&gt;
					&lt;html:menuItem label="Item 2" url="#"/&gt;
					&lt;html:menuItem label="Item 3" url="#"/&gt;
				&lt;/html:menuDropDown&gt;
			&lt;/html:menu&gt; </example>
	</tag>

	<tag>
		<description>Renders a javascript block</description>
		<display-name>Javascript</display-name>
		<name>jsCode</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.JsCodeTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates whether the component should be rendered. Default : true.</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<example>
			&lt;html:jsCode&gt;
				test();
				function test(){
					alert('oi');
				}
			&lt;/html:jsCode&gt; </example>
	</tag>

	<tag>
		<description>Renders a list</description>
		<display-name>Groupments</display-name>
		<name>listGroup</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.ListGroupTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates whether the component should be rendered. Default : true</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates a CSS class to the component</description>
			<name>cssClass</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:listGroup&gt;
				&lt;html:listGroupItem&gt;
					Item 1
				&lt;/html:listGroupItem&gt;
				&lt;html:listGroupItem&gt;
					Item 2
				&lt;/html:listGroupItem&gt;
			&lt;/html:listGroup&gt; </example>
	</tag>

	<tag>
		<description>Renders a list item</description>
		<display-name>Groupments</display-name>
		<name>listGroupItem</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.ListGroupItemTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates whether the component should be rendered. Default : true</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates a CSS class to the component</description>
			<name>cssClass</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates the state where the item should be rendered. Default: none. Options: primary, secondary, light, dark, warning, success, danger, info</description>
			<name>state</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:listGroup&gt;
				&lt;html:listGroupItem&gt;
					Item 1
				&lt;/html:listGroupItem&gt;
				&lt;html:listGroupItem&gt;
					Item 2
				&lt;/html:listGroupItem&gt;
			&lt;/html:listGroup&gt; </example>
	</tag>

	<tag>
		<description>Renders a mask on a particular component</description>
		<display-name>Mask</display-name>
		<name>mask</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.MaskTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the mask to be used</description>
			<name>mask</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the component name a ser incorporado a mascara</description>
			<name>attachTo</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates whether the fill should occur behind forward</description>
			<name>reverse</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<example>
			&lt;html:input name="teste"/&gt;
			&lt;html:mask mask="99/99/9999" attachTo="teste"/&gt; </example>
	</tag>

	<tag>
		<description>Renders a cluster of buttons</description>
		<display-name>Button</display-name>
		<name>buttonGroup</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.ButtonGroupTag</tag-class>
		<body-content>scriptless</body-content>
		<example>
			&lt;html:buttonGroup&gt;
				&lt;html:button label="Botao 1" state="primary" url="#"/&gt;
				&lt;html:button label="Botao 3" state="danger" url="#"/&gt;
			&lt;/html:buttonGroup&gt; </example>
	</tag>

</taglib>  