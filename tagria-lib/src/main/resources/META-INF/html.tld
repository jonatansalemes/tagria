<?xml version="1.0" encoding="UTF-8" ?>
<taglib xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee 
http://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd"
	version="2.0">

	<description>Tagria html library</description>
	<display-name>Tagria html library</display-name>
	<tlib-version>1.0</tlib-version>
	<short-name>html</short-name>
	<uri>http://tagrialib.jslsolucoes.com/tags/html</uri>
	
	<tag>
		<description>Renders a h2</description>
		<display-name>Html</display-name>
		<name>h2</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.H2Tag</tag-class>
		<body-content>scriptless</body-content>
		<example>
			&lt;html:h2&gt; Header &lt;/html:h2&gt; </example>
	</tag>
	
	<tag>
		<description>Renders a horizontal line</description>
		<display-name>Html</display-name>
		<name>hr</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.HrTag</tag-class>
		<body-content>scriptless</body-content>
		<example>
			&lt;html:hr/&gt; 
		</example>
	</tag>
	
	<tag>
		<description>Renders a small</description>
		<display-name>Html</display-name>
		<name>small</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.SmallTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates a CSS class to the component</description>
			<name>cssClass</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:small&gt; small text &lt;/html:small&gt; </example>
	</tag>
	
	<tag>
		<description>Format values</description>
		<display-name>Misc</display-name>
		<name>format</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.FormatTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates a type format in which the value must be converted. Options: date,datetime, timestamp, hour, currency, zipCode, cnpj, tel, cpf</description>
			<name>type</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:format type="currency"&gt; ${ myValue} &lt;/html:format&gt;
		</example>
	</tag>
	
	<tag>
		<description>Renders a paragraf</description>
		<display-name>Html</display-name>
		<name>p</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.PTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates whether the component should be rendered. Default : true</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<example>
			&lt;html:p&gt; Content &lt;/html:p&gt; </example>
	</tag>

	<tag>
		<description>Renders a source block of a particular language without executing it</description>
		<display-name>Misc</display-name>
		<name>code</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.CodeTag</tag-class>
		<body-content>scriptless</body-content>
		<example>
			&lt;html:code&gt;
				private class Java {
					private String id;
					private String name;
				}
			&lt;/html:code&gt; </example>
			
	</tag>
	
	<tag>
		<description>Renders a triggered event for a given component</description>
		<display-name>Javascript</display-name>
		<name>jsEvent</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.JsEventTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the component name to be achieved</description>
			<name>attachTo</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the component selector that triggers the event</description>
			<name>attachToSelector</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the javascript event to be fired</description>
			<name>event</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be rendered. Default : true</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<example>
			&lt;html:input name="input1" placeholder="Focus in and focus out" /&gt;
			
			&lt;html:jsEvent attachTo="input1" event="blur"&gt;
			    alert('blur');
			&lt;/html:jsEvent&gt; </example>
	</tag>
	
	<tag>
		<description>Renders a modal block</description>
		<display-name>Misc</display-name>
		<name>modal</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.ModalTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the modal id for direct manipulation of events</description>
			<name>id</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates the label of the title modal</description>
			<name>label</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the component name that triggers the modal screen</description>
			<name>attachTo</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the component selector that triggers the modal screen</description>
			<name>attachToSelector</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates if modal can be closeable. Default : true. Options : true,false</description>
			<name>closeable</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>Indicates if component is opened on load. Default : false. Options : true,false</description>
			<name>open</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be rendered</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<example>
		    &lt;html:button id="botao" label="Abrir modal"/&gt;
			&lt;html:modal label="Titulo do modal" attachToSelector="botao"&gt;
				Outros componentes 
				
				&lt;html:toolbar&gt;
					Componentes
				&lt;/html:toolbar&gt;
				
			&lt;/html:modal&gt; </example>
	</tag>

	<tag>
		<description>Renders a view with all header. This view must be declared ONLY ONCE and main tag used throughout view</description>
		<display-name>Misc</display-name>
		<name>view</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.ViewTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the title of the current page</description>
			<name>title</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates if ajax auto animation is loaded for view</description>
			<name>ajaxAnimation</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<example>
			&lt;html:view&gt;
				Todos os componentes necess√°rios
			&lt;/html:view&gt; </example>
	</tag>

	<tag>
		<description>Renders a main container block with a standard margin</description>
		<display-name>Layout</display-name>
		<name>container</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.ContainerTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates whether a container must be responsive to the screen 100%</description>
			<name>fluid</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<example>
			
			&lt;html:alert state="info"&gt;
				Componente fora do container
			&lt;/html:alert&gt;
			
			&lt;html:container&gt;
				&lt;html:alert state="info"&gt;
					Componente dentro do container
				&lt;/html:alert&gt;
			&lt;/html:container&gt; </example>
	</tag>

	<tag>
		<description>Renders an alert box</description>
		<display-name>Misc</display-name>
		<name>alert</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.AlertTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the id for the component</description>
			<name>id</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates a label for the alert.</description>
			<name>label</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component can be closed. Default: false</description>
			<name>dismissible</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates the state where the box should be rendered. Default: warning. Options: primary, secondary, light, dark, warning, success, danger, info</description>
			<name>state</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be rendered. Default : true</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be visible. Default : true</description>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<example>
			&lt;html:alert state="info"&gt;
				Caixa de informa√ß√£o
			&lt;/html:alert&gt; </example>
	</tag>



	<tag>
		<description>Renders a form</description>
		<display-name>Form</display-name>
		<name>form</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.FormTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the action of submission</description>
			<name>action</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the target of submission. Default : _self. Options : _blank,_self,_parent,_top,iframe</description>
			<name>target</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates the method to be used. Default: post. Options: post, get</description>
			<name>method</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the name of form</description>
			<name>name</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates a validation to be performed on the data form</description>
			<name>validation</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the label of the form</description>
			<name>label</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be rendered</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates whether the form should have file support</description>
			<name>multipart</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<example>
		
			&lt;html:form action="#"&gt;
				&lt;html:formGroup label="Campo 1" required="true"&gt;
					&lt;html:input required="true" name="field1"/&gt;
				&lt;/html:formGroup&gt;
				&lt;html:formGroup label="Campo 2"&gt;
					&lt;html:input name="field2"/&gt;
				&lt;/html:formGroup&gt;
			&lt;/html:form&gt; </example>
	</tag>

	<tag>
		<description>Renders a component grouping in the form</description>
		<display-name>Form</display-name>
		<name>formGroup</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.FormGroupTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the label of the group</description>
			<name>label</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the id of the group</description>
			<name>id</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates the element to be oriented the label</description>
			<name>forElement</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates whether the completion of the internal component should be mandatory</description>
			<name>required</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be rendered</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be visible</description>
			<name>visible</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<example>
			&lt;html:form action="#"&gt;
				&lt;html:formGroup forElement="field1" label="Campo 1" required="true"&gt;
					&lt;html:input required="true" name="field1"/&gt;
				&lt;/html:formGroup&gt;
				&lt;html:formGroup label="Campo 2"&gt;
					&lt;html:input name="field2"/&gt;
				&lt;/html:formGroup&gt;
			&lt;/html:form&gt; </example>
	</tag>

	<tag>
		<description>Renders a line of columns of subdivision (divided into 12 sections combined with the col tag)</description>
		<display-name>Form</display-name>
		<name>row</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.RowTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates a CSS class to the component</description>
			<name>cssClass</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:form action="#"&gt;
				&lt;html:formGroup forElement="field1" label="Campo 1" required="true"&gt;
					&lt;html:row&gt;
						&lt;html:col extraSmall="6"&gt;
							&lt;html:input required="true" name="field1"/&gt;
						&lt;/html:col&gt;
						&lt;html:col extraSmall="6"&gt;
							&lt;html:input name="field2"/&gt;
						&lt;/html:col&gt;
					&lt;/html:row>
				&lt;/html:formGroup&gt;
			&lt;/html:form&gt; </example>
	</tag>

	<tag>
		<description>Renders a column within a row</description>
		<display-name>Form</display-name>
		<name>col</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.ColTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the number of columns to fill to extra small viewport. Options: 1 to 12</description>
			<name>extraSmall</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description>Indicates the number of columns to fill to small viewport. Options: 1 to 12</description>
			<name>small</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description>Indicates the number of columns to fill to medium viewport. Options: 1 to 12</description>
			<name>medium</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description>Indicates the number of columns to fill to large viewport. Options: 1 to 12</description>
			<name>large</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description>It indicates a CSS class to the component</description>
			<name>cssClass</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:form action="#"&gt;
				&lt;html:formGroup forElement="field1" label="Campo 1" required="true"&gt;
					&lt;html:row&gt;
						&lt;html:col extraSmall="3"&gt;
							&lt;html:input required="true" name="field1"/&gt;
						&lt;/html:col&gt;
						&lt;html:col extraSmall="9"&gt;
							&lt;html:input name="field2"/&gt;
						&lt;/html:col&gt;
					&lt;/html:row>
				&lt;/html:formGroup&gt;
			&lt;/html:form&gt; </example>
	</tag>

	<tag>
		<description>Renders an input</description>
		<display-name>Input</display-name>
		<name>input</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.InputTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates a CSS class to the component</description>
			<name>cssClass</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates a title for the component</description>
			<name>title</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates a format in which the value must be converted. Options: date,datetime, timestamp, hour, currency, zipCode, cnpj, tel, cpf</description>
			<name>format</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates the type of input. Default: text. Options: button, checkbox, color, date, datetime, datetime-local, email, file, hidden, image, month, number, password, radio, range, reset, search, submit, tel, text, time, url, week</description>
			<name>type</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the component&#39;s id</description>
			<name>id</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the component name</description>
			<name>name</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the component fill mark</description>
			<name>placeholder</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the value of the component</description>
			<name>value</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should win the cursor focus</description>
			<name>focus</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component is required within a form</description>
			<name>required</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates the Padra to be followed in a particular field</description>
			<name>pattern</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be disabled. Default: false</description>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>Indicates the maximum number of characters to be filled</description>
			<name>maxLength</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description>Indicates the maximun number accepted</description>
			<name>max</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description>Indicates the minimum number accepted</description>
			<name>min</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description>Indicates if (radio, checkbox) if the component should be marked</description>
			<name>checked</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates whether the component supports multiple inputs</description>
			<name>multiple</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>Indicates which extensions supported in the case (file)</description>
			<name>accept</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:input name="field1"/&gt; 
		</example>
	</tag>

	<tag>
		<description>Renders a div</description>
		<display-name>Layout</display-name>
		<name>div</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.DivTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the component&#39;s id</description>
			<name>id</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates a CSS class to the component</description>
			<name>cssClass</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be rendered. Default : true.</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<example>
			&lt;html:div&gt;
				Conteudo
			&lt;/html:div&gt; </example>
	</tag>

	<tag>
		<description>Renders importing a js file or css</description>
		<display-name>Misc</display-name>
		<name>import</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.ImportTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the type of file to be imported. Options: js, css</description>
			<name>type</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the URL where the file</description>
			<name>url</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:import type="css" url="/css/example.css"/&gt;
			&lt;html:import type="js" url="/js/example.js"/&gt; </example>
	</tag>

	<tag>
		<description>Renders an image</description>
		<display-name>Image</display-name>
		<name>img</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.ImageTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates the label if the component can not be loaded</description>
			<name>alt</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component must follow a set on the properties cdn</description>
			<name>cdn</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be responsive</description>
			<name>responsive</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>Indicates the point component</description>
			<name>height</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description>Indicates the image url</description>
			<name>url</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the image width</description>
			<name>width</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description>It indicates a format for the component. Options: rounded, circle, thumbnail</description>
			<name>shape</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates a CSS class to the component</description>
			<name>cssClass</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:img url="/image/person.png" alt="logo" responsive="true"/&gt; </example>
	</tag>
	
	

	<tag>
		<description>Renders a link</description>
		<display-name>Html</display-name>
		<name>link</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.LinkTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the url component</description>
			<name>url</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the label component</description>
			<name>label</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be rendered</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>Indicates the component target. Default: _self. Options: _blank, _newtab, nomedoiframe</description>
			<name>target</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:link label="Meu link" url="#"/&gt; </example>
	</tag>
	
	
	
	
	
	<tag>
		<description>Renders a body</description>
		<display-name>Html</display-name>
		<name>body</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.BodyTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the CSS class to the component</description>
			<name>cssClass</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:body&gt; Content &lt;/html:body&gt; </example>
	</tag>

	<tag>
		<description>Renders an iframe</description>
		<display-name>Misc</display-name>
		<name>iframe</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.IframeTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the name of the iframe</description>
			<name>name</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates a CSS class to the component</description>
			<name>cssClass</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the id of the iframe</description>
			<name>id</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the URL where the iframe</description>
			<name>url</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:iframe url="/app/welcome" name="conteudo"/&gt; </example>
	</tag>
	
	
	<tag>
		<description>Renders a dropdown menu</description>
		<display-name>Menu</display-name>
		<name>menuDropDown</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.MenuDropDownTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates the label to be used in dropdown root</description>
			<name>label</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be rendered</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<example>
				&lt;html:menuDropDown label="Menu dropdown" &gt;
					&lt;html:menuDropDownItem label="Item 1" url="#"/&gt;
				&lt;/html:menuDropDown&gt; </example>
	</tag>

	<tag>
		<description>Renders a menu item on dropdown</description>
		<display-name>Menu</display-name>
		<name>menuDropDownItem</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.MenuDropDownItemTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the icon to be used in the menu icon. available list https://fontawesome.com/icons</description>
			<name>icon</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the URL to be used</description>
			<name>url</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates the label to be used</description>
			<name>label</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the target browser. Default: _self. Options: _self, _parent, _blank, namedeumiframe</description>
			<name>target</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be rendered</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<example>
			&lt;html:menu&gt;
				&lt;html:menuButton icon="cog" align="right"&gt;
					&lt;html:menuDropDownItem label="Item 1" url="#"/&gt;
					&lt;html:menuDropDownDivider/&gt;
					&lt;html:menuDropDownItem label="Item 2" target="_blank" url="#"/&gt;
					&lt;html:menuDropDownItem icon="trash" label="Item 3" url="#"/&gt;
				&lt;/html:menuButton&gt;
			&lt;/html:menu&gt; </example>
	</tag>
	
	<tag>
		<description>Renders a menu collapsable content group</description>
		<display-name>Menu</display-name>
		<name>menuCollapsable</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.MenuCollapsableTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the id of menu block to be collapsed</description>
			<name>id</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:menu&gt;
				
					&lt;html:menuCollapse attachToSelector="#block1"&gt;
					
					&lt;/html:menuCollapse&gt;
				
				&lt;html:menuCollapsable id="block1"&gt;
					&lt;html:menuText&gt;
						My text menu
					&lt;/html:menuText&gt;
				&lt;/html:menuCollapsable&gt;
				
			&lt;/html:menu&gt;
		</example>
	</tag>
	
	<tag>
		<description>Renders a menu collapse group</description>
		<display-name>Menu</display-name>
		<name>menuCollapse</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.MenuCollapseTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the component name that triggers the menu group</description>
			<name>attachTo</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the component selector that triggers the menu group</description>
			<name>attachToSelector</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:menu&gt;
				
					&lt;html:menuCollapse attachToSelector="#block1"&gt;
					
					&lt;/html:menuCollapse&gt;
				
				&lt;html:menuCollapsable id="block1"&gt;
					menu components
				&lt;/html:menuCollapsable&gt;
				
			&lt;/html:menu&gt;
		</example>
	</tag>
	
	<tag>
		<description>Renders a horizontal menu</description>
		<display-name>Menu</display-name>
		<name>menu</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.MenuTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates whether the component should be fixed. Default none. Options : top,bottom</description>
			<name>fixed</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:menu&gt;
				&lt;html:menuButton icon="cog" align="right"&gt;
					&lt;html:menuDropDownItem label="Item 1" url="#"/&gt;
					&lt;html:menuDropDownDivider/&gt;
					&lt;html:menuDropDownItem label="Item 2" url="#"/&gt;
					&lt;html:menuDropDownItem label="Item 3" url="#"/&gt;
				&lt;/html:menuButton&gt;
			&lt;/html:menu&gt; </example>
	</tag>

	<tag>
		<description>Renders a logo in the navigation menu in text format</description>
		<display-name>Menu</display-name>
		<name>menuBrand</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.MenuBrandTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the URL to be called by clicking on the logo</description>
			<name>url</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates the label to be used in brand logo</description>
			<name>label</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:menu&gt;
				&lt;html:brand label="Meu titulo" url="#"/&gt;
			&lt;/html:menu&gt; </example>
	</tag>

	<tag>
		<description>Renders a grid</description>
		<display-name>Grid</display-name>
		<name>grid</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.GridTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates the collection to be iterated by the component</description>
			<name>data</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.util.Collection</type>
		</attribute>
		<attribute>
			<description>It indicates the name of the variable java to be made available the object of iteration</description>
			<name>var</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates the name of the variable to be available to current iteration</description>
			<name>varStatus</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the label component</description>
			<name>label</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the total number of records in component</description>
			<name>totalResults</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description>It indicates the default number of results per page. Default: 60. Options: 20,40,60,80,100</description>
			<name>resultsPerPage</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be search feature. Default: false</description>
			<name>search</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be paginated. Default: true</description>
			<name>paginate</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be export feature. Default: true</description>
			<name>export</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>Indicates the url component a ser utilizada caso haja pagina√ß√£o</description>
			<name>url</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be rendered</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>Indicates the component title when there are no lines available</description>
			<name>noRowText</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:grid label="Pessoas" url="/component/grid" data="${ pessoas }" var="pessoa" noRowText="N√£o h√° pessoas dispon√≠veis"&gt;
				&lt;html:gridColumn label="Identifica√ß√£o" exportable="true"&gt;
					${ pessoa.id }
				&lt;/html:gridColumn&gt;
				&lt;html:gridColumn label="Nome" exportable="true"&gt;
					${ pessoa.nome }
				&lt;/html:gridColumn&gt;
			&lt;/html:grid&gt; </example>
	</tag>

	<tag>
		<description>Renders a grid column</description>
		<display-name>Grid</display-name>
		<name>gridColumn</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.GridColumnTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the label component</description>
			<name>label</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.util.Collection</type>
		</attribute>
		<attribute>
			<description>Indicates whether the component value is of type boolean</description>
			<name>booleanType</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates whether the column should be collapsable</description>
			<name>collapsable</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates whether the column should be exported</description>
			<name>exportable</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>Indicates the alignment of the content. Default: left. Options: left, center, right</description>
			<name>align</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates where hide column depending of viewport. Options: xs,md,lg,sm</description>
			<name>hideOnViewport</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates a format in which the content should be converted. Options: date,datetime, timestamp, hour, currency, zip code, cnpj, tel, cpf</description>
			<name>format</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be rendered</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>Indicates the component state. Default: default. Options: danger, info, success, default</description>
			<name>state</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:grid label="Pessoas" url="/component/grid" data="${ pessoas }" var="pessoa" noRowText="N√£o h√° pessoas dispon√≠veis"&gt;
				&lt;html:gridColumn label="Identifica√ß√£o" exportable="true"&gt;
					${ pessoa.id }
				&lt;/html:gridColumn&gt;
				&lt;html:gridColumn label="Nome" exportable="true"&gt;
					${ pessoa.nome }
				&lt;/html:gridColumn&gt;
			&lt;/html:grid&gt; </example>
	</tag>

	<tag>
		<description>Renders a button</description>
		<display-name>Button</display-name>
		<name>button</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.ButtonTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the status of the button. Default: default. Options: default, primary, danger, info, success</description>
			<name>state</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the type of button. Default: button. Options: button, submit</description>
			<name>type</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the component linked to dismiss button. Default false. Options: true,false</description>
			<name>dismiss</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates a CSS class to the component</description>
			<name>cssClass</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the url to be performed by the component</description>
			<name>url</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the icon to be used by the component. available list https://fontawesome.com/icons</description>
			<name>icon</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the component&#39;s id</description>
			<name>id</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the label component</description>
			<name>label</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the component target. Default: _self. Options: _blank, _newtab, _parent, nomedoiframe</description>
			<name>target</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the title button</description>
			<name>title</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be rendered. Default : true</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be blocked after click . Default : false</description>
			<name>autoblock</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates whether the component should be disabled. Default: false.</description>
			<name>disabled</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<example>
			&lt;html:button url="#" icon="cog" label="botao" state="info"/&gt; </example>
	</tag>

	<tag>
		<description>Renders a toolbar for the component (Available for grid, form, card and modal)</description>
		<display-name>Misc</display-name>
		<name>toolbar</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.ToolbarTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates whether the component should be rendered</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<example>
			&lt;html:form action="#"&gt;
				&lt;html:formGroup label="Campo 1" required="true"&gt;
					&lt;html:input required="true" name="field1"/&gt;
				&lt;/html:formGroup&gt;
				&lt;html:formGroup label="Campo 2"&gt;
					&lt;html:input name="field2"/&gt;
				&lt;/html:formGroup&gt;
				
				&lt;html:toolbar&gt;
				    &lt;html:button state="primary" type="submit" label="Alterando label padrao"/&gt;
				&lt;/html:toolbar&gt;
			&lt;/html:form&gt; </example>
	</tag>

	<tag>
		<description>Renders a menu dropdown divider</description>
		<display-name>Menu</display-name>
		<name>menuDropDownDivider</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.MenuDropDownDividerTag</tag-class>
		<body-content>scriptless</body-content>
		<example>
			&lt;html:menu&gt;
				&lt;html:menuButton icon="cog" align="right"&gt;
					&lt;html:menuItem label="Item 1" url="#"/&gt;
					&lt;html:menuSeparator/&gt;
					&lt;html:menuItem label="Item 2" url="#"/&gt;
					&lt;html:menuItem label="Item 3" url="#"/&gt;
				&lt;/html:menuButton&gt;
			&lt;/html:menu&gt; </example>
	</tag>

	<tag>
		<description>Renders a javascript block</description>
		<display-name>Javascript</display-name>
		<name>jsCode</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.JsCodeTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates whether the component should be rendered. Default : true.</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<example>
			&lt;html:jsCode&gt;
				test();
				function test(){
					alert('oi');
				}
			&lt;/html:jsCode&gt; </example>
	</tag>

	<tag>
		<description>Renders a list</description>
		<display-name>Groupments</display-name>
		<name>listGroup</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.ListGroupTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates whether the component should be rendered. Default : true</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates a CSS class to the component</description>
			<name>cssClass</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:listGroup&gt;
				&lt;html:listGroupItem&gt;
					Item 1
				&lt;/html:listGroupItem&gt;
				&lt;html:listGroupItem&gt;
					Item 2
				&lt;/html:listGroupItem&gt;
			&lt;/html:listGroup&gt; </example>
	</tag>

	<tag>
		<description>Renders a list item</description>
		<display-name>Groupments</display-name>
		<name>listGroupItem</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.ListGroupItemTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>It indicates whether the component should be rendered. Default : true</description>
			<name>rendered</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<attribute>
			<description>It indicates a CSS class to the component</description>
			<name>cssClass</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates the state where the item should be rendered. Default: none. Options: primary, secondary, light, dark, warning, success, danger, info</description>
			<name>state</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<example>
			&lt;html:listGroup&gt;
				&lt;html:listGroupItem&gt;
					Item 1
				&lt;/html:listGroupItem&gt;
				&lt;html:listGroupItem&gt;
					Item 2
				&lt;/html:listGroupItem&gt;
			&lt;/html:listGroup&gt; </example>
	</tag>

	<tag>
		<description>Renders a mask on a particular component</description>
		<display-name>Mask</display-name>
		<name>mask</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.MaskTag</tag-class>
		<body-content>scriptless</body-content>
		<attribute>
			<description>Indicates the mask to be used</description>
			<name>mask</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Indicates the component name a ser incorporado a mascara</description>
			<name>attachTo</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>It indicates whether the fill should occur behind forward</description>
			<name>reverse</name>
			<rtexprvalue>true</rtexprvalue>
			<type>java.lang.Boolean</type>
		</attribute>
		<example>
			&lt;html:input name="teste"/&gt;
			&lt;html:mask mask="99/99/9999" attachTo="teste"/&gt; </example>
	</tag>

	<tag>
		<description>Renders a cluster of buttons</description>
		<display-name>Button</display-name>
		<name>buttonGroup</name>
		<tag-class>com.jslsolucoes.tagria.lib.tag.html.ButtonGroupTag</tag-class>
		<body-content>scriptless</body-content>
		<example>
			&lt;html:buttonGroup&gt;
				&lt;html:button label="Botao 1" state="primary" url="#"/&gt;
				&lt;html:button label="Botao 3" state="danger" url="#"/&gt;
			&lt;/html:buttonGroup&gt; </example>
	</tag>

</taglib>  